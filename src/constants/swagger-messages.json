{
  "users": {
    "summary": {
      "create": "This action will allow to create one user per request.",
      "findAllByRole": "This action will retrieve all users by role.",
      "findOne": "This action will retrieve the user that matches against the provided uuid.",
      "update": "This action will update the fields inside the request against the uuid matched user.",
      "createSubscription": "This action will allow to create one subscription to any uuid provided sponsor.",
      "findAllSubscriptions": "This action will retrieve all the subscriptions for any uuid provided sponsor."
    },
    "errors": {
      "conflict": "User was not created.",
      "notFound": "User which provided uuid was not found.",
      "badRequest": "User request contains errors or query params are incorrect."
    },
    "success": {
      "create": "User created.",
      "findAllByRole": "List of matched users by role.",
      "findOne": "List of uuid matched users.",
      "update": "Returns how many users were updated.",
      "createSubscription": "User successfully created.",
      "findAllSubscriptions": "List of uuid matched subscriptions."
    },
    "dtos": {
      "firstName": {
        "example": "John",
        "description": "Required user first name."
      },
      "lastName": {
        "example": "Doe",
        "description": "Optional user last name."
      },
      "isActive": {
        "example": "true | false",
        "description": "If the user will be deactivated or activated by default."
      },
      "role": {
        "example": "maintainer | admin | staff",
        "description": "Role for the user.",
        "message": "Role must be either: maintainer, admin or staff."
      }
    }
  }
}
